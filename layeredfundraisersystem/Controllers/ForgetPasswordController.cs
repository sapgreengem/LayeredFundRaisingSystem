using FundRaiserSystemData;
using FundRaiserSystemEntity;
using FundRaiserSystemService;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Mail;
using System.Web;
using System.Web.Mvc;

namespace layeredFundRaiserSystem.Controllers
{
    public class ForgetPasswordController : Controller
    {
        public string GeneratedLink { get; private set; }

        IUserLoginService userLoginService = ServiceFactory.GetUserLoginService();

        // GET: ForgetPassword
        public ActionResult Index()
        {
            return View();
        }

        [HttpPost]
        public ActionResult Index(FormCollection collection)
        {
            if (!String.IsNullOrWhiteSpace(collection["email"]))
            {
                var email = collection["email"];
                var User = userLoginService.GetAll().Where(a => a.Email == email);
                var msg = "";

                if (User.Count() == 0)
                    msg = "Invalid Email";
                else
                    msg = "";

                if (msg == "")
                {
                    var send_mail = sendEmail(email);
                    UserLogin userLogin = new UserLogin();
                    foreach (var use in User)
                    {
                        userLogin.Email = use.Email;
                        userLogin.AutoGeneratedLink = GeneratedLink;
                        userLogin.Password = use.Password;
                        userLogin.Status = use.Status;
                        userLogin.UserCreationDate = use.UserCreationDate;
                        userLogin.UserId = use.UserId;
                    }
                    userLoginService.Update(userLogin);

                    ViewBag.message = "An email is sent to your email. Click that link to verify";
                    ViewBag.EmailError = msg;
                }
                else
                {
                    ViewBag.EmailError = msg;
                }
            }
            else
            {
                ViewBag.EmailError = "Please give your email";
            }
            
            return View();
        }

        public bool sendEmail(string email)
        {
            bool result = false;
            string systemMailAddress = "jaowatraihan@gmail.com";
            string systemPassword = "deluxismykeyboard12";
            string host = "localhost:16720";//Domain Name

            Guid obj = Guid.NewGuid();
            GeneratedLink = obj.ToString();

            string MessageBody =
                "<strong>Dear " + email + "</strong>" +
                "<p>Click <a href='http://" + host + "/ForgetPassword/NewPassword/" + GeneratedLink + "' >Here</a> to Change Password</p>";

            MailMessage mailMessage = new MailMessage();
            mailMessage.To.Add(email);
            mailMessage.From = new MailAddress(systemMailAddress);
            mailMessage.Subject = "Change Password";
            mailMessage.Body = MessageBody;
            mailMessage.IsBodyHtml = true;

            SmtpClient smtp = new SmtpClient();
            smtp.Host = "smtp.gmail.com";
            smtp.Port = 587;//587 for Gmail
            smtp.UseDefaultCredentials = false;
            smtp.Credentials = new System.Net.NetworkCredential(systemMailAddress, systemPassword); // Enter sender's Email and password   
            smtp.EnableSsl = true;
            smtp.Send(mailMessage);

            return result;
        }

        [HttpGet]
        public ActionResult NewPassword(string id)
        {
            var User = userLoginService.GetAll().Where(a => a.AutoGeneratedLink == id);
            foreach (var use in User)
            {
                ViewBag.email = use.Email;
            }
            return View();
        }


        [HttpPost]
        public ActionResult NewPassword(FormCollection collection)
        {
            var User = userLoginService.GetAll().Where(a => a.Email == collection["UserEmail"]);
            UserLogin userLogin = new UserLogin();
            foreach (var use in User)
            {
                userLogin.Email = use.Email;
                userLogin.AutoGeneratedLink = "";
                userLogin.Password = collection["password"].ToString();
                userLogin.Status = use.Status;
                userLogin.UserCreationDate = use.UserCreationDate;
                userLogin.UserId = use.UserId;
            }
            userLoginService.Update(userLogin);

            return Redirect("~/Login");
        }

        [HttpGet]
        public JsonResult VerifyEmail(string id)
        {
            string msg = "";
            IUserLoginService service = ServiceFactory.GetUserLoginService();
            IEnumerable<UserLogin> login = service.GetAll().Where(a => a.Email == id);

            if (login.Count() == 0)
                msg = "Invalid Email";
            else
                msg = "";

            return Json(new { message = msg }, JsonRequestBehavior.AllowGet);
        }
    }
}
